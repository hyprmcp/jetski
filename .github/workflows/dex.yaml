# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build Dex

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:

jobs:
  build:
    name: Build Dex
    timeout-minutes: 10
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4.1.0
        with:
          version: 10

      - name: Setup node.js
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: '24'
          cache: pnpm
          registry-url: 'https://registry.npmjs.org'

      - name: Build dex frontend
        run: pnpm run dex:build

      - name: Login to GitHub Container Registry (tag only)
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Generate Docker Metadata
        id: meta
        uses: docker/metadata-action@c1e51972afc2121e065aed6d45c65596fe445f3f # v5.8.0
        with:
          images: |
            ghcr.io/jetski-sh/jetski-dex
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.description=Dex
      - name: Docker build (push on tag only)
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        id: build-push
        with:
          platforms: ${{ startsWith(github.ref, 'refs/tags/') && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          context: dex/
          file: dex/Dockerfile
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          sbom: true
          provenance: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - uses: sigstore/cosign-installer@d58896d6a1865668819e1d91763c7751a165e159 # v3.9.2
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
      - name: Sign the images with GitHub OIDC Token
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        env:
          DIGEST: ${{ steps.build-push.outputs.digest }}
          TAGS: ${{ steps.meta.outputs.tags }}
        run: |
          images=""
          for tag in ${TAGS}; do
            images+="${tag}@${DIGEST} "
          done
          cosign sign --yes ${images}
