// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

// ProjectSpecApplyConfiguration represents a declarative configuration of the ProjectSpec type for use
// with apply.
type ProjectSpecApplyConfiguration struct {
	ProjectID            *string `json:"projectId,omitempty"`
	ProjectName          *string `json:"projectName,omitempty"`
	DeploymentRevisionID *string `json:"deploymentRevisionId,omitempty"`
	Authenticated        *bool   `json:"authenticationEnabled,omitempty"`
	Telemetry            *bool   `json:"telemetryEnabled,omitempty"`
	ProxyURL             *string `json:"proxyUrl,omitempty"`
}

// ProjectSpecApplyConfiguration constructs a declarative configuration of the ProjectSpec type for use with
// apply.
func ProjectSpec() *ProjectSpecApplyConfiguration {
	return &ProjectSpecApplyConfiguration{}
}

// WithProjectID sets the ProjectID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProjectID field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithProjectID(value string) *ProjectSpecApplyConfiguration {
	b.ProjectID = &value
	return b
}

// WithProjectName sets the ProjectName field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProjectName field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithProjectName(value string) *ProjectSpecApplyConfiguration {
	b.ProjectName = &value
	return b
}

// WithDeploymentRevisionID sets the DeploymentRevisionID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the DeploymentRevisionID field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithDeploymentRevisionID(value string) *ProjectSpecApplyConfiguration {
	b.DeploymentRevisionID = &value
	return b
}

// WithAuthenticated sets the Authenticated field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Authenticated field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithAuthenticated(value bool) *ProjectSpecApplyConfiguration {
	b.Authenticated = &value
	return b
}

// WithTelemetry sets the Telemetry field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Telemetry field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithTelemetry(value bool) *ProjectSpecApplyConfiguration {
	b.Telemetry = &value
	return b
}

// WithProxyURL sets the ProxyURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ProxyURL field is set to the value of the last call.
func (b *ProjectSpecApplyConfiguration) WithProxyURL(value string) *ProjectSpecApplyConfiguration {
	b.ProxyURL = &value
	return b
}
