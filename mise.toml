[tools]
node = "24"
pnpm = "10"
go = "1.25.1"
golangci-lint = "2.5.0"
"ubi:kubernetes-sigs/controller-tools" = { version = "v0.19.0", exe = "controller-gen" }
helm = "3"

[env]
_.file = '.env.development.local'

[vars]
minikube_profile = 'minikube-jetski'

[tasks.tidy]
run = "go mod tidy"

[tasks.controller-gen]
run = [
  'controller-gen object paths="./internal/kubernetes/api/..."',
  'controller-gen applyconfiguration paths="./internal/kubernetes/api/..."',
  'controller-gen crd paths="./internal/kubernetes/api/..." output:crd:artifacts:config=internal/kubernetes/fs/embedded',
]

[tasks.lint]
depends = ["tidy", "controller-gen"]
run = "golangci-lint run"

[tasks.serve]
run = "go run . serve"
description = '''
  Run the main jetski server.
  Use with 'mise serve -- --install-controller' to also install the MCPGateway CRD and metacontroller config.
'''

[tasks.test]
run = "go test ./..."

[tasks.generate]
depends = ["migrate"]
run = "go run . generate"

[tasks.migrate]
run = "go run . migrate"

[tasks.purge]
run = "go run . migrate --down"

[tasks.minikube-start]
run = [
  'minikube start -p {{vars.minikube_profile}}',
  'minikube addons enable ingress -p {{vars.minikube_profile}}',
  'helm upgrade metacontroller oci://ghcr.io/metacontroller/metacontroller-helm --install --version 4.12.5 --namespace metacontroller --create-namespace --kube-context {{vars.minikube_profile}}',
]
description = "Start a dedicated minikube cluster with metacontroller installed and the jetski gateway loaded"

[tasks.minikube-stop]
run = 'minikube stop -p {{vars.minikube_profile}}'
